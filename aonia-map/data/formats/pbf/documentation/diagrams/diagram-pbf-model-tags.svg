<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1026.0417px" preserveAspectRatio="none" style="width:1340px;height:1026px;background:#333333;" version="1.1" viewBox="0 0 1340 1026" width="1340.625px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="283.3333" x="521.6146" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="260.4167" x="533.0729" y="30.5583">diagram-pbf-model-tags</text><!--MD5=[d79730e212aaab83526b3c982ee56b6e]
class PbfTagFilter--><rect codeLine="17" fill="#282828" height="83.3781" id="PbfTagFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="152.0833" x="422.3958" y="398.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="152.0833" x="422.3958" y="398.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="152.0833" x="422.3958" y="421.5495"/><rect codeLine="17" fill="none" height="83.3781" id="PbfTagFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="152.0833" x="422.3958" y="398.4945"/><ellipse cx="453.3854" cy="414.1886" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M450.2686,411.3505 L450.2686,409.7636 L455.6946,409.7636 L455.6946,411.3505 L453.8818,411.3505 L453.8818,417.2892 L455.6946,417.2892 L455.6946,418.8761 L450.2686,418.8761 L450.2686,417.2892 L452.0813,417.2892 L452.0813,411.3505 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="473.6979" y="418.9128">PbfTagFilter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="423.4375" x2="573.4375" y1="429.8828" y2="429.8828"/><ellipse cx="433.8542" cy="465.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="445.3125" y="472.1639">boolean accepts(Tag)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="423.4375" x2="469.2708" y1="448.0886" y2="448.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="472.3958" y="451.8982">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="527.6042" x2="573.4375" y1="448.0886" y2="448.0886"/><!--MD5=[a73d0c2ecfbfe908f655a2bb439c5095]
class Keyed--><rect codeLine="7" fill="#282828" height="48.055" id="Keyed" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="134.8958" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="134.8958" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="134.8958" y="76.7578"/><rect codeLine="7" fill="none" height="48.055" id="Keyed" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="134.8958" y="53.7028"/><ellipse cx="149.4792" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M146.3623,66.5588 L146.3623,64.9719 L151.7883,64.9719 L151.7883,66.5588 L149.9756,66.5588 L149.9756,72.4976 L151.7883,72.4976 L151.7883,74.0845 L146.3623,74.0845 L146.3623,72.4976 L148.175,72.4976 L148.175,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="166.1458" y="74.1211">Keyed</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="135.9375" x2="210.9375" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="135.9375" x2="210.9375" y1="93.4245" y2="93.4245"/><!--MD5=[19c5389150046187c3588e0fe3bbc0c4]
class PbfTagMap--><rect codeLine="56" fill="#282828" height="494.9422" id="PbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="328.125" x="9.375" y="192.7653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="328.125" x="9.375" y="192.7653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="328.125" x="9.375" y="215.8203"/><rect codeLine="56" fill="none" height="494.9422" id="PbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="328.125" x="9.375" y="192.7653"/><ellipse cx="130.2083" cy="208.4595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M132.1187,212.8845 Q131.6915,213.1042 131.2215,213.2141 Q130.7515,213.324 130.2327,213.324 Q128.3895,213.324 127.419,212.1094 Q126.4486,210.8948 126.4486,208.5999 Q126.4486,206.2988 127.419,205.0842 Q128.3895,203.8696 130.2327,203.8696 Q130.7515,203.8696 131.2276,203.9795 Q131.7037,204.0894 132.1187,204.3091 L132.1187,206.311 Q131.6549,205.8838 131.2185,205.6854 Q130.7821,205.4871 130.3182,205.4871 Q129.3294,205.4871 128.8259,206.2714 Q128.3223,207.0557 128.3223,208.5999 Q128.3223,210.1379 128.8259,210.9222 Q129.3294,211.7065 130.3182,211.7065 Q130.7821,211.7065 131.2185,211.5082 Q131.6549,211.3098 132.1187,210.8826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="71.875" x="153.125" y="213.1836">PbfTagMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="336.4583" y1="224.1536" y2="224.1536"/><polygon fill="#FFFF44" points="20.8333,254.3152,25,258.4819,20.8333,262.6485,16.6667,258.4819" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="32.2917" y="266.4347">PbfTagMap(int)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="129.6875" y1="242.3594" y2="242.3594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="132.8125" y="246.169">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="217.1875" x2="336.4583" y1="242.3594" y2="242.3594"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="336.4583" y1="276.1434" y2="276.1434"/><ellipse cx="20.8333" cy="287.6017" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="32.2917" y="294.5129">String get(String key, String defaultValue)</text><ellipse cx="20.8333" cy="307.3466" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="32.2917" y="314.2578">Tag tag(String key)</text><ellipse cx="20.8333" cy="327.0915" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="210.4167" x="32.2917" y="334.0027">int valueAsNaturalNumber(String key)</text><ellipse cx="20.8333" cy="346.8363" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="32.2917" y="353.7476">boolean valueIsNo(String key)</text><ellipse cx="20.8333" cy="366.5812" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="32.2917" y="373.4924">boolean valueIsYes(String key)</text><ellipse cx="20.8333" cy="410.2376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="32.2917" y="417.1488">boolean containsKey(String key)</text><ellipse cx="20.8333" cy="429.9825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="32.2917" y="436.8937">PbfTagMap create()</text><ellipse cx="20.8333" cy="449.7274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="32.2917" y="456.6386">PbfTagMap from(Collection&lt;Tag&gt; tags)</text><ellipse cx="20.8333" cy="469.4722" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="295.8333" x="32.2917" y="476.3835">PbfTagMap from(Collection&lt;Tag&gt; tags, PbfTagFilter)</text><ellipse cx="20.8333" cy="489.2171" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="32.2917" y="496.1283">boolean isEmpty()</text><ellipse cx="20.8333" cy="508.962" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="32.2917" y="515.8732">Iterator&lt;String&gt; keys()</text><ellipse cx="20.8333" cy="528.7069" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="32.2917" y="535.6181">void put(String key, String value)</text><ellipse cx="20.8333" cy="548.4517" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="32.2917" y="555.363">void putAll(Iterable&lt;Tag&gt; tags)</text><ellipse cx="20.8333" cy="568.1966" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="32.2917" y="575.1078">int size()</text><ellipse cx="20.8333" cy="587.9415" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="32.2917" y="594.8527">String value(String key)</text><ellipse cx="20.8333" cy="607.6864" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="32.2917" y="614.5976">StringList valueSplit(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="139.0625" y1="393.0735" y2="393.0735"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="142.1875" y="396.8831">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="207.8125" x2="336.4583" y1="393.0735" y2="393.0735"/><ellipse cx="20.8333" cy="651.3428" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="32.2917" y="658.254">int valueAsInt(String key)</text><ellipse cx="20.8333" cy="671.0876" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="32.2917" y="677.9989">long valueAsLong(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="141.6667" y1="634.1787" y2="634.1787"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="144.7917" y="637.9883">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="205.2083" x2="336.4583" y1="634.1787" y2="634.1787"/><!--MD5=[d78db216e393aee26594d0bbb4b8a4c2]
class EmptyPbfTagMap--><rect codeLine="10" fill="#282828" height="83.3781" id="EmptyPbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="36.9792" y="868.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="36.9792" y="868.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="36.9792" y="891.3411"/><rect codeLine="10" fill="none" height="83.3781" id="EmptyPbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="36.9792" y="868.2861"/><ellipse cx="51.5625" cy="883.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M53.4729,888.4054 Q53.0457,888.6251 52.5757,888.7349 Q52.1057,888.8448 51.5869,888.8448 Q49.7437,888.8448 48.7732,887.6302 Q47.8027,886.4156 47.8027,884.1207 Q47.8027,881.8197 48.7732,880.6051 Q49.7437,879.3905 51.5869,879.3905 Q52.1057,879.3905 52.5818,879.5003 Q53.0579,879.6102 53.4729,879.8299 L53.4729,881.8319 Q53.009,881.4046 52.5726,881.2063 Q52.1362,881.0079 51.6724,881.0079 Q50.6836,881.0079 50.1801,881.7922 Q49.6765,882.5765 49.6765,884.1207 Q49.6765,885.6588 50.1801,886.4431 Q50.6836,887.2274 51.6724,887.2274 Q52.1362,887.2274 52.5726,887.029 Q53.009,886.8306 53.4729,886.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="112.5" x="68.2292" y="888.7044">EmptyPbfTagMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="38.0208" x2="185.9375" y1="899.6745" y2="899.6745"/><polygon fill="#FFFF44" points="48.4375,929.836,52.6042,934.0027,48.4375,938.1694,44.2708,934.0027" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="59.8958" y="941.9556">EmptyPbfTagMap()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="38.0208" x2="68.2292" y1="917.8802" y2="917.8802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="71.3542" y="921.6899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="155.7292" x2="185.9375" y1="917.8802" y2="917.8802"/><!--MD5=[39d6d2ea03de602dbf4d534e70c872a9]
class Tag--><rect fill="#282828" height="48.055" id="Tag" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="61.4583" x="785.4167" y="885.9945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="61.4583" x="785.4167" y="885.9945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="61.4583" x="785.4167" y="909.0495"/><rect fill="none" height="48.055" id="Tag" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="61.4583" x="785.4167" y="885.9945"/><ellipse cx="800" cy="901.6886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M801.9104,906.1137 Q801.4832,906.3334 801.0132,906.4433 Q800.5432,906.5531 800.0244,906.5531 Q798.1812,906.5531 797.2107,905.3385 Q796.2402,904.1239 796.2402,901.829 Q796.2402,899.528 797.2107,898.3134 Q798.1812,897.0988 800.0244,897.0988 Q800.5432,897.0988 801.0193,897.2087 Q801.4954,897.3185 801.9104,897.5382 L801.9104,899.5402 Q801.4465,899.113 801.0101,898.9146 Q800.5737,898.7162 800.1099,898.7162 Q799.1211,898.7162 798.6176,899.5005 Q798.114,900.2848 798.114,901.829 Q798.114,903.3671 798.6176,904.1514 Q799.1211,904.9357 800.1099,904.9357 Q800.5737,904.9357 801.0101,904.7373 Q801.4465,904.539 801.9104,904.1117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="23.9583" x="816.6667" y="906.4128">Tag</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="786.4583" x2="845.8333" y1="917.3828" y2="917.3828"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="786.4583" x2="845.8333" y1="925.7161" y2="925.7161"/><!--MD5=[56a5e24547e9848fa048dca0457945be]
class PbfTagList--><rect codeLine="24" fill="#282828" height="550.0102" id="PbfTagList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="325" x="1008.8542" y="165.1611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="325" x="1008.8542" y="165.1611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="325" x="1008.8542" y="188.2161"/><rect codeLine="24" fill="none" height="550.0102" id="PbfTagList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="325" x="1008.8542" y="165.1611"/><ellipse cx="1129.6875" cy="180.8553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1131.5979,185.2804 Q1131.1707,185.5001 1130.7007,185.6099 Q1130.2307,185.7198 1129.7119,185.7198 Q1127.8687,185.7198 1126.8982,184.5052 Q1125.9277,183.2906 1125.9277,180.9957 Q1125.9277,178.6947 1126.8982,177.4801 Q1127.8687,176.2655 1129.7119,176.2655 Q1130.2307,176.2655 1130.7068,176.3753 Q1131.1829,176.4852 1131.5979,176.7049 L1131.5979,178.7069 Q1131.134,178.2796 1130.6976,178.0813 Q1130.2612,177.8829 1129.7974,177.8829 Q1128.8086,177.8829 1128.3051,178.6672 Q1127.8015,179.4515 1127.8015,180.9957 Q1127.8015,182.5338 1128.3051,183.3181 Q1128.8086,184.1024 1129.7974,184.1024 Q1130.2612,184.1024 1130.6976,183.904 Q1131.134,183.7056 1131.5979,183.2784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="68.75" x="1152.6042" y="185.5794">PbfTagList</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1009.8958" x2="1332.8125" y1="196.5495" y2="196.5495"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1009.8958" x2="1332.8125" y1="204.8828" y2="204.8828"/><ellipse cx="1020.3125" cy="216.3411" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="1031.7708" y="223.2524">Tag get(String key)</text><ellipse cx="1020.3125" cy="236.086" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="1031.7708" y="242.9972">Tag get(int index)</text><ellipse cx="1020.3125" cy="255.8309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="1031.7708" y="262.7421">void retainOnly(Set&lt;String&gt; keys)</text><ellipse cx="1020.3125" cy="299.4873" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1031.7708" y="306.3985">boolean isValid()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1009.8958" x2="1144.7917" y1="282.3232" y2="282.3232"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1147.9167" y="286.1328">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1197.9167" x2="1332.8125" y1="282.3232" y2="282.3232"/><ellipse cx="1020.3125" cy="343.1437" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="1031.7708" y="350.0549">PbfTagList add(Tag)</text><ellipse cx="1020.3125" cy="362.8886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="1031.7708" y="369.7998">PbfTagList add(String key, String value)</text><ellipse cx="1020.3125" cy="382.6335" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="1031.7708" y="389.5447">PbfTagList addAll(Iterable&lt;Tag&gt; tags)</text><ellipse cx="1020.3125" cy="402.3783" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1031.7708" y="409.2896">List&lt;Tag&gt; asList()</text><ellipse cx="1020.3125" cy="422.1232" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="1031.7708" y="429.0344">boolean containsKey(String key)</text><ellipse cx="1020.3125" cy="441.8681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="1031.7708" y="448.7793">PbfTagList copy()</text><ellipse cx="1020.3125" cy="461.613" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="1031.7708" y="468.5242">PbfTagList create()</text><ellipse cx="1020.3125" cy="481.3578" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="1031.7708" y="488.269">PbfTagList from(Collection&lt;Tag&gt; tags)</text><ellipse cx="1020.3125" cy="501.1027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="1031.7708" y="508.0139">PbfTagList from(Collection&lt;Tag&gt; tags, PbfTagFilter)</text><ellipse cx="1020.3125" cy="520.8476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="1031.7708" y="527.7588">boolean isEmpty()</text><ellipse cx="1020.3125" cy="540.5924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="1031.7708" y="547.5037">PbfTagList matchingKey(String key)</text><ellipse cx="1020.3125" cy="560.3373" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="1031.7708" y="567.2485">PbfTagList of(Tag)</text><ellipse cx="1020.3125" cy="580.0822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="1031.7708" y="586.9934">void removeKey(String key)</text><ellipse cx="1020.3125" cy="599.8271" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="1031.7708" y="606.7383">PbfTagList set(int index, String key, String value)</text><ellipse cx="1020.3125" cy="619.5719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="1031.7708" y="626.4832">int size()</text><ellipse cx="1020.3125" cy="639.3168" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1031.7708" y="646.228">PbfTagList sorted()</text><ellipse cx="1020.3125" cy="659.0617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="1031.7708" y="665.9729">String valueForKey(String key)</text><ellipse cx="1020.3125" cy="678.8066" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="1031.7708" y="685.7178">String valueForKey(String key, String defaultValue)</text><ellipse cx="1020.3125" cy="698.5514" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="1031.7708" y="705.4626">PbfTagList withoutKey(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1009.8958" x2="1136.9792" y1="325.9796" y2="325.9796"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1140.1042" y="329.7892">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1205.7292" x2="1332.8125" y1="325.9796" y2="325.9796"/><!--MD5=[92c7f35f41c1a9021289ca75e2accaf4]
class PbfTagPatternFilter--><rect codeLine="84" fill="#282828" height="218.514" id="PbfTagPatternFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="525" x="223.4375" y="800.5778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="525" x="223.4375" y="800.5778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="525" x="223.4375" y="823.6328"/><rect codeLine="84" fill="none" height="218.514" id="PbfTagPatternFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="525" x="223.4375" y="800.5778"/><ellipse cx="416.6667" cy="816.272" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M418.5771,820.697 Q418.1498,820.9167 417.6799,821.0266 Q417.2099,821.1365 416.6911,821.1365 Q414.8478,821.1365 413.8774,819.9219 Q412.9069,818.7073 412.9069,816.4124 Q412.9069,814.1113 413.8774,812.8967 Q414.8478,811.6821 416.6911,811.6821 Q417.2099,811.6821 417.686,811.792 Q418.162,811.9019 418.5771,812.1216 L418.5771,814.1235 Q418.1132,813.6963 417.6768,813.4979 Q417.2404,813.2996 416.7765,813.2996 Q415.7878,813.2996 415.2842,814.0839 Q414.7807,814.8682 414.7807,816.4124 Q414.7807,817.9504 415.2842,818.7347 Q415.7878,819.519 416.7765,819.519 Q417.2404,819.519 417.6768,819.3207 Q418.1132,819.1223 418.5771,818.6951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="123.9583" x="439.5833" y="820.9961">PbfTagPatternFilter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="224.4792" x2="747.3958" y1="831.9661" y2="831.9661"/><ellipse cx="234.8958" cy="867.336" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="147.9167" x="246.3542" y="874.2472">PbfTagPatternFilter(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="224.4792" x2="442.1875" y1="850.1719" y2="850.1719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="445.3125" y="853.9815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="529.6875" x2="747.3958" y1="850.1719" y2="850.1719"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="224.4792" x2="747.3958" y1="883.9559" y2="883.9559"/><ellipse cx="234.8958" cy="895.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="246.3542" y="902.3254">Set&lt;String&gt; allFilteredTags()</text><ellipse cx="234.8958" cy="915.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="246.3542" y="922.0703">Set&lt;String&gt; rejectedTags()</text><ellipse cx="234.8958" cy="958.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="492.7083" x="246.3542" y="965.7267">SwitchParser.Builder&lt;PbfTagPatternFilter&gt; switchParser(String name, String description)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="224.4792" x2="416.6667" y1="941.6514" y2="941.6514"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="419.7917" y="945.461">(command line parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="555.2083" x2="747.3958" y1="941.6514" y2="941.6514"/><ellipse cx="234.8958" cy="1002.4719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="246.3542" y="1009.3831">PbfTagPatternFilter forPattern(String pattern)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="224.4792" x2="456.7708" y1="985.3078" y2="985.3078"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="459.8958" y="989.1174">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="515.1042" x2="747.3958" y1="985.3078" y2="985.3078"/><!--MD5=[b1e210ffc7c989b1f4aba02912a48aa9]
class PbfTags--><rect codeLine="98" fill="#282828" height="146.7794" id="PbfTags" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="337.5" x="634.8958" y="366.7236"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="337.5" x="634.8958" y="366.7236"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="337.5" x="634.8958" y="389.7786"/><rect codeLine="98" fill="none" height="146.7794" id="PbfTags" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="337.5" x="634.8958" y="366.7236"/><ellipse cx="770.3125" cy="382.4178" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M772.2229,386.8429 Q771.7957,387.0626 771.3257,387.1724 Q770.8557,387.2823 770.3369,387.2823 Q768.4937,387.2823 767.5232,386.0677 Q766.5527,384.8531 766.5527,382.5582 Q766.5527,380.2572 767.5232,379.0426 Q768.4937,377.828 770.3369,377.828 Q770.8557,377.828 771.3318,377.9378 Q771.8079,378.0477 772.2229,378.2674 L772.2229,380.2694 Q771.759,379.8421 771.3226,379.6438 Q770.8862,379.4454 770.4224,379.4454 Q769.4336,379.4454 768.9301,380.2297 Q768.4265,381.014 768.4265,382.5582 Q768.4265,384.0963 768.9301,384.8806 Q769.4336,385.6649 770.4224,385.6649 Q770.8862,385.6649 771.3226,385.4665 Q771.759,385.2681 772.2229,384.8409 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="793.2292" y="387.1419">PbfTags</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="635.9375" x2="971.3542" y1="398.112" y2="398.112"/><ellipse cx="646.3542" cy="433.4819" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="657.8125" y="440.3931">PropertyMap tags(String prefix, Collection&lt;Tag&gt; tags)</text><ellipse cx="646.3542" cy="453.2267" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="657.8125" y="460.1379">List&lt;Tag&gt; tags(String prefix, PropertyMap properties)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="635.9375" x2="769.2708" y1="416.3177" y2="416.3177"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="772.3958" y="420.1274">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="838.0208" x2="971.3542" y1="416.3177" y2="416.3177"/><ellipse cx="646.3542" cy="496.8831" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="657.8125" y="503.7944">Tag parse(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="635.9375" x2="775" y1="479.719" y2="479.719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="778.125" y="483.5286">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="832.2917" x2="971.3542" y1="479.719" y2="479.719"/><!--MD5=[cc942af7ae38b17b678e2ecccc557737]
reverse link PbfTagMap to EmptyPbfTagMap--><path codeLine="9" d="M138.3021,708.609 C130.0729,771.2549 122.2708,830.6195 117.3229,868.2132 " fill="none" id="PbfTagMap-backto-EmptyPbfTagMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="131.1042,707.432,141.0417,687.7236,145.5625,709.3278,131.1042,707.432" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ad57c19ac60e931f9d8ac4882e497226]
link PbfTagFilter to Tag--><path codeLine="16" d="M507.1875,481.9215 C521.3854,539.7236 554.2813,646.1715 616.1458,715.1611 C667.6354,772.5778 715.1667,743.6403 767.1875,800.5778 C788.1563,823.5257 801.3958,856.9736 808.75,880.6195 " fill="none" id="PbfTagFilter-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="810.3125,885.807,811.5678,875.6248,808.7954,880.8245,803.5958,878.0521,810.3125,885.807" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="38.5417" x="727.6042" y="762.6628">filters</text><!--MD5=[c8a6b7b4b88f4c6d9233f6e4bfdff5df]
link PbfTagList to Tag--><path codeLine="23" d="M1008.6771,708.3278 C993.5,729.4111 977.8438,750.0049 961.9792,769.3278 C926.6354,812.3486 879,855.734 847.9375,882.4528 " fill="none" id="PbfTagList-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="843.8542,885.9528,853.6838,883.0152,847.8086,882.5633,848.2606,876.6881,843.8542,885.9528" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="40.625" x="978.6458" y="762.6628">stores</text><!--MD5=[8b40e2470dba9ca1d038d72d18121892]
reverse link Keyed to PbfTagMap--><path codeLine="54" d="M173.4375,122.6299 C173.4375,141.9007 173.4375,166.1611 173.4375,192.6403 " fill="none" id="Keyed-backto-PbfTagMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="166.1458,122.6299,173.4375,101.7965,180.7292,122.6299,166.1458,122.6299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[bbdb956dbc56d14ff1f462eec549b843]
link PbfTagMap to Tag--><path codeLine="55" d="M337.5417,662.6507 C358.2396,682.2236 380.375,700.234 403.6458,715.1611 C480.0417,764.1507 512.0938,748.9111 600.5208,769.3278 C673.9583,786.2861 707.9167,754.0257 767.1875,800.5778 C792.1875,820.2132 804.8333,855.4424 810.9271,880.3903 " fill="none" id="PbfTagMap-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="812.1354,885.5465,814.0787,875.473,810.9599,880.4726,805.9604,877.3538,812.1354,885.5465" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="40.625" x="604.6875" y="762.6628">stores</text><!--MD5=[b494e1d0b9c72b23ebdcad1360657f46]
reverse link PbfTagFilter to PbfTagPatternFilter--><path codeLine="83" d="M496.7813,503.0986 C494.7604,578.7549 491.3021,708.1195 488.8333,800.4424 " fill="none" id="PbfTagFilter-backto-PbfTagPatternFilter" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="489.5,502.5257,497.3542,481.8903,504.0833,502.9111,489.5,502.5257" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[19808d32ec61d77a74356442bacb26b6]
link PbfTags to Tag--><path codeLine="97" d="M805.5833,513.7653 C808.3958,618.7965 813.4583,808.4528 815.3854,880.2861 " fill="none" id="PbfTags-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="815.5208,885.6611,819.4181,876.171,815.3721,880.4549,811.0881,876.409,815.5208,885.6611" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="133.3333" x="816.1458" y="762.6628">provides utilities for</text><!--MD5=[7548ce75a8626f854831c67785d7b3f9]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "diagram-pbf-model-tags"
    
    interface PbfTagFilter
    interface Keyed
    
    PbfTagMap <|- - EmptyPbfTagMap
    class EmptyPbfTagMap
    {
        - -(constructors)- -
        #EmptyPbfTagMap()
    }
    
    PbfTagFilter - -> Tag : "filters"
    interface PbfTagFilter
    {
        - -(filtering)- -
        +boolean accepts(Tag)
    }
    
    PbfTagList - -> Tag : "stores"
    class PbfTagList
    {
        - -
        +Tag get(String key)
        +Tag get(int index)
        +void retainOnly(Set<String> keys)
        - -(checks)- -
        +boolean isValid()
        - -(collection)- -
        +PbfTagList add(Tag)
        +PbfTagList add(String key, String value)
        +PbfTagList addAll(Iterable<Tag> tags)
        +List<Tag> asList()
        +boolean containsKey(String key)
        +PbfTagList copy()
        +PbfTagList create()
        +PbfTagList from(Collection<Tag> tags)
        +PbfTagList from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +PbfTagList matchingKey(String key)
        +PbfTagList of(Tag)
        +void removeKey(String key)
        +PbfTagList set(int index, String key, String value)
        +int size()
        +PbfTagList sorted()
        +String valueForKey(String key)
        +String valueForKey(String key, String defaultValue)
        +PbfTagList withoutKey(String key)
    }
    
    Keyed <|- - PbfTagMap
    PbfTagMap - -> Tag : "stores"
    class PbfTagMap
    {
        - -(constructors)- -
        #PbfTagMap(int)
        - -
        +String get(String key, String defaultValue)
        +Tag tag(String key)
        +int valueAsNaturalNumber(String key)
        +boolean valueIsNo(String key)
        +boolean valueIsYes(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +PbfTagMap create()
        +PbfTagMap from(Collection<Tag> tags)
        +PbfTagMap from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +Iterator<String> keys()
        +void put(String key, String value)
        +void putAll(Iterable<Tag> tags)
        +int size()
        +String value(String key)
        +StringList valueSplit(String key)
        - -(primitive)- -
        +int valueAsInt(String key)
        +long valueAsLong(String key)
    }
    
    PbfTagFilter <|- - PbfTagPatternFilter
    class PbfTagPatternFilter
    {
        - -(constructors)- -
        +PbfTagPatternFilter(String)
        - -
        +Set<String> allFilteredTags()
        +Set<String> rejectedTags()
        - -(command line parsing)- -
        +SwitchParser.Builder<PbfTagPatternFilter> switchParser(String name, String description)
        - -(filtering)- -
        +PbfTagPatternFilter forPattern(String pattern)
    }
    
    PbfTags - -> Tag : "provides utilities for"
    class PbfTags
    {
        - -(collection)- -
        +PropertyMap tags(String prefix, Collection<Tag> tags)
        +List<Tag> tags(String prefix, PropertyMap properties)
        - -(parsing)- -
        +Tag parse(String)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "diagram-pbf-model-tags"
    
    interface PbfTagFilter
    interface Keyed
    
    PbfTagMap <|- - EmptyPbfTagMap
    class EmptyPbfTagMap
    {
        - -(constructors)- -
        #EmptyPbfTagMap()
    }
    
    PbfTagFilter - -> Tag : "filters"
    interface PbfTagFilter
    {
        - -(filtering)- -
        +boolean accepts(Tag)
    }
    
    PbfTagList - -> Tag : "stores"
    class PbfTagList
    {
        - -
        +Tag get(String key)
        +Tag get(int index)
        +void retainOnly(Set<String> keys)
        - -(checks)- -
        +boolean isValid()
        - -(collection)- -
        +PbfTagList add(Tag)
        +PbfTagList add(String key, String value)
        +PbfTagList addAll(Iterable<Tag> tags)
        +List<Tag> asList()
        +boolean containsKey(String key)
        +PbfTagList copy()
        +PbfTagList create()
        +PbfTagList from(Collection<Tag> tags)
        +PbfTagList from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +PbfTagList matchingKey(String key)
        +PbfTagList of(Tag)
        +void removeKey(String key)
        +PbfTagList set(int index, String key, String value)
        +int size()
        +PbfTagList sorted()
        +String valueForKey(String key)
        +String valueForKey(String key, String defaultValue)
        +PbfTagList withoutKey(String key)
    }
    
    Keyed <|- - PbfTagMap
    PbfTagMap - -> Tag : "stores"
    class PbfTagMap
    {
        - -(constructors)- -
        #PbfTagMap(int)
        - -
        +String get(String key, String defaultValue)
        +Tag tag(String key)
        +int valueAsNaturalNumber(String key)
        +boolean valueIsNo(String key)
        +boolean valueIsYes(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +PbfTagMap create()
        +PbfTagMap from(Collection<Tag> tags)
        +PbfTagMap from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +Iterator<String> keys()
        +void put(String key, String value)
        +void putAll(Iterable<Tag> tags)
        +int size()
        +String value(String key)
        +StringList valueSplit(String key)
        - -(primitive)- -
        +int valueAsInt(String key)
        +long valueAsLong(String key)
    }
    
    PbfTagFilter <|- - PbfTagPatternFilter
    class PbfTagPatternFilter
    {
        - -(constructors)- -
        +PbfTagPatternFilter(String)
        - -
        +Set<String> allFilteredTags()
        +Set<String> rejectedTags()
        - -(command line parsing)- -
        +SwitchParser.Builder<PbfTagPatternFilter> switchParser(String name, String description)
        - -(filtering)- -
        +PbfTagPatternFilter forPattern(String pattern)
    }
    
    PbfTags - -> Tag : "provides utilities for"
    class PbfTags
    {
        - -(collection)- -
        +PropertyMap tags(String prefix, Collection<Tag> tags)
        +List<Tag> tags(String prefix, PropertyMap properties)
        - -(parsing)- -
        +Tag parse(String)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>