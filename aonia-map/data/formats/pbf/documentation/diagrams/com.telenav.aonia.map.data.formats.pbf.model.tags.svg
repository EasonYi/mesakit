<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1026.0417px" preserveAspectRatio="none" style="width:1531px;height:1026px;background:#333333;" version="1.1" viewBox="0 0 1531 1026" width="1531.25px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="545.8333" x="485.4167" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="522.9167" x="496.875" y="30.5583">com.telenav.aonia.map.data.formats.pbf.model.tags</text><!--MD5=[dce3aa0f8d452f3127b61eeee409dd72]
cluster PbfTagPatternFilter--><polygon fill="#333333" points="16.6667,349.5361,153.125,349.5361,160.4167,376.7578,228.125,376.7578,228.125,506.8278,16.6667,506.8278,16.6667,349.5361" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="16.6667" x2="160.4167" y1="376.7578" y2="376.7578"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="123.9583" x="23.9583" y="366.8294">PbfTagPatternFilter</text><!--MD5=[1acbd48952e73271f2db6342f37c12b7]
class PbfTagPatternFilter.Converter--><rect codeLine="12" fill="#282828" height="83.3781" id="PbfTagPatternFilter.Converter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="61.4583" y="398.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="61.4583" y="398.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="61.4583" y="421.5495"/><rect codeLine="12" fill="none" height="83.3781" id="PbfTagPatternFilter.Converter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="61.4583" y="398.4945"/><ellipse cx="94.3229" cy="414.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M96.2333,418.6137 Q95.8061,418.8334 95.3361,418.9433 Q94.8661,419.0531 94.3473,419.0531 Q92.5041,419.0531 91.5336,417.8385 Q90.5632,416.6239 90.5632,414.329 Q90.5632,412.028 91.5336,410.8134 Q92.5041,409.5988 94.3473,409.5988 Q94.8661,409.5988 95.3422,409.7087 Q95.8183,409.8185 96.2333,410.0382 L96.2333,412.0402 Q95.7694,411.613 95.333,411.4146 Q94.8966,411.2162 94.4328,411.2162 Q93.444,411.2162 92.9405,412.0005 Q92.4369,412.7848 92.4369,414.329 Q92.4369,415.8671 92.9405,416.6514 Q93.444,417.4357 94.4328,417.4357 Q94.8966,417.4357 95.333,417.2373 Q95.7694,417.039 96.2333,416.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="63.5417" x="115.0521" y="418.9128">Converter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="62.5" x2="202.0833" y1="429.8828" y2="429.8828"/><ellipse cx="72.9167" cy="465.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="84.375" y="472.1639">Converter(Listener)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="62.5" x2="88.5417" y1="448.0886" y2="448.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="91.6667" y="451.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="176.0417" x2="202.0833" y1="448.0886" y2="448.0886"/><!--MD5=[9aa687ed59f428548907e723dba1087a]
class BaseStringConverter--><rect codeLine="6" fill="#282828" height="48.055" id="BaseStringConverter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="169.7917" x="47.3958" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="169.7917" x="47.3958" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="169.7917" x="47.3958" y="76.7578"/><rect codeLine="6" fill="none" height="48.055" id="BaseStringConverter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="169.7917" x="47.3958" y="53.7028"/><ellipse cx="61.9792" cy="69.397" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M62.0931,66.099 L61.2447,69.8283 L62.9476,69.8283 Z M60.9945,64.4511 L63.1978,64.4511 L65.6576,73.5636 L63.857,73.5636 L63.2955,71.3114 L60.8846,71.3114 L60.3353,73.5636 L58.5347,73.5636 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="132.2917" x="78.6458" y="74.1211">BaseStringConverter</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="48.4375" x2="216.1458" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="48.4375" x2="216.1458" y1="93.4245" y2="93.4245"/><!--MD5=[d79730e212aaab83526b3c982ee56b6e]
class PbfTagFilter--><rect codeLine="26" fill="#282828" height="83.3781" id="PbfTagFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="152.0833" x="253.125" y="398.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="152.0833" x="253.125" y="398.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="152.0833" x="253.125" y="421.5495"/><rect codeLine="26" fill="none" height="83.3781" id="PbfTagFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="152.0833" x="253.125" y="398.4945"/><ellipse cx="284.1146" cy="414.1886" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M280.9977,411.3505 L280.9977,409.7636 L286.4237,409.7636 L286.4237,411.3505 L284.611,411.3505 L284.611,417.2892 L286.4237,417.2892 L286.4237,418.8761 L280.9977,418.8761 L280.9977,417.2892 L282.8105,417.2892 L282.8105,411.3505 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="304.4271" y="418.9128">PbfTagFilter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="254.1667" x2="404.1667" y1="429.8828" y2="429.8828"/><ellipse cx="264.5833" cy="465.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="276.0417" y="472.1639">boolean accepts(Tag)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="254.1667" x2="300" y1="448.0886" y2="448.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="303.125" y="451.8982">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="358.3333" x2="404.1667" y1="448.0886" y2="448.0886"/><!--MD5=[a73d0c2ecfbfe908f655a2bb439c5095]
class Keyed--><rect codeLine="9" fill="#282828" height="48.055" id="Keyed" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="585.4167" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="585.4167" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="585.4167" y="76.7578"/><rect codeLine="9" fill="none" height="48.055" id="Keyed" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="585.4167" y="53.7028"/><ellipse cx="600" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M596.8831,66.5588 L596.8831,64.9719 L602.3092,64.9719 L602.3092,66.5588 L600.4964,66.5588 L600.4964,72.4976 L602.3092,72.4976 L602.3092,74.0845 L596.8831,74.0845 L596.8831,72.4976 L598.6959,72.4976 L598.6959,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="616.6667" y="74.1211">Keyed</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="586.4583" x2="661.4583" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="586.4583" x2="661.4583" y1="93.4245" y2="93.4245"/><!--MD5=[19c5389150046187c3588e0fe3bbc0c4]
class PbfTagMap--><rect codeLine="65" fill="#282828" height="494.9422" id="PbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="328.125" x="459.8958" y="192.7653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="328.125" x="459.8958" y="192.7653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="328.125" x="459.8958" y="215.8203"/><rect codeLine="65" fill="none" height="494.9422" id="PbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="328.125" x="459.8958" y="192.7653"/><ellipse cx="580.7292" cy="208.4595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M582.6396,212.8845 Q582.2123,213.1042 581.7424,213.2141 Q581.2724,213.324 580.7536,213.324 Q578.9103,213.324 577.9399,212.1094 Q576.9694,210.8948 576.9694,208.5999 Q576.9694,206.2988 577.9399,205.0842 Q578.9103,203.8696 580.7536,203.8696 Q581.2724,203.8696 581.7485,203.9795 Q582.2245,204.0894 582.6396,204.3091 L582.6396,206.311 Q582.1757,205.8838 581.7393,205.6854 Q581.3029,205.4871 580.839,205.4871 Q579.8503,205.4871 579.3467,206.2714 Q578.8432,207.0557 578.8432,208.5999 Q578.8432,210.1379 579.3467,210.9222 Q579.8503,211.7065 580.839,211.7065 Q581.3029,211.7065 581.7393,211.5082 Q582.1757,211.3098 582.6396,210.8826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="71.875" x="603.6458" y="213.1836">PbfTagMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="460.9375" x2="786.9792" y1="224.1536" y2="224.1536"/><polygon fill="#FFFF44" points="471.3542,254.3152,475.5208,258.4819,471.3542,262.6485,467.1875,258.4819" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="482.8125" y="266.4347">PbfTagMap(int)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="460.9375" x2="580.2083" y1="242.3594" y2="242.3594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="583.3333" y="246.169">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="667.7083" x2="786.9792" y1="242.3594" y2="242.3594"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="460.9375" x2="786.9792" y1="276.1434" y2="276.1434"/><ellipse cx="471.3542" cy="287.6017" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="482.8125" y="294.5129">String get(String key, String defaultValue)</text><ellipse cx="471.3542" cy="307.3466" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="482.8125" y="314.2578">Tag tag(String key)</text><ellipse cx="471.3542" cy="327.0915" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="210.4167" x="482.8125" y="334.0027">int valueAsNaturalNumber(String key)</text><ellipse cx="471.3542" cy="346.8363" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="482.8125" y="353.7476">boolean valueIsNo(String key)</text><ellipse cx="471.3542" cy="366.5812" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="482.8125" y="373.4924">boolean valueIsYes(String key)</text><ellipse cx="471.3542" cy="410.2376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="482.8125" y="417.1488">boolean containsKey(String key)</text><ellipse cx="471.3542" cy="429.9825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="482.8125" y="436.8937">PbfTagMap create()</text><ellipse cx="471.3542" cy="449.7274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="482.8125" y="456.6386">PbfTagMap from(Collection&lt;Tag&gt; tags)</text><ellipse cx="471.3542" cy="469.4722" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="295.8333" x="482.8125" y="476.3835">PbfTagMap from(Collection&lt;Tag&gt; tags, PbfTagFilter)</text><ellipse cx="471.3542" cy="489.2171" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="482.8125" y="496.1283">boolean isEmpty()</text><ellipse cx="471.3542" cy="508.962" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="482.8125" y="515.8732">Iterator&lt;String&gt; keys()</text><ellipse cx="471.3542" cy="528.7069" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="482.8125" y="535.6181">void put(String key, String value)</text><ellipse cx="471.3542" cy="548.4517" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="482.8125" y="555.363">void putAll(Iterable&lt;Tag&gt; tags)</text><ellipse cx="471.3542" cy="568.1966" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="482.8125" y="575.1078">int size()</text><ellipse cx="471.3542" cy="587.9415" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="482.8125" y="594.8527">String value(String key)</text><ellipse cx="471.3542" cy="607.6864" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="482.8125" y="614.5976">StringList valueSplit(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="460.9375" x2="589.5833" y1="393.0735" y2="393.0735"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="592.7083" y="396.8831">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="658.3333" x2="786.9792" y1="393.0735" y2="393.0735"/><ellipse cx="471.3542" cy="651.3428" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="482.8125" y="658.254">int valueAsInt(String key)</text><ellipse cx="471.3542" cy="671.0876" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="482.8125" y="677.9989">long valueAsLong(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="460.9375" x2="592.1875" y1="634.1787" y2="634.1787"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="595.3125" y="637.9883">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="655.7292" x2="786.9792" y1="634.1787" y2="634.1787"/><!--MD5=[d78db216e393aee26594d0bbb4b8a4c2]
class EmptyPbfTagMap--><rect codeLine="19" fill="#282828" height="83.3781" id="EmptyPbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="592.7083" y="868.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="592.7083" y="868.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="592.7083" y="891.3411"/><rect codeLine="19" fill="none" height="83.3781" id="EmptyPbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="592.7083" y="868.2861"/><ellipse cx="607.2917" cy="883.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M609.2021,888.4054 Q608.7748,888.6251 608.3049,888.7349 Q607.8349,888.8448 607.3161,888.8448 Q605.4728,888.8448 604.5024,887.6302 Q603.5319,886.4156 603.5319,884.1207 Q603.5319,881.8197 604.5024,880.6051 Q605.4728,879.3905 607.3161,879.3905 Q607.8349,879.3905 608.311,879.5003 Q608.787,879.6102 609.2021,879.8299 L609.2021,881.8319 Q608.7382,881.4046 608.3018,881.2063 Q607.8654,881.0079 607.4015,881.0079 Q606.4128,881.0079 605.9092,881.7922 Q605.4057,882.5765 605.4057,884.1207 Q605.4057,885.6588 605.9092,886.4431 Q606.4128,887.2274 607.4015,887.2274 Q607.8654,887.2274 608.3018,887.029 Q608.7382,886.8306 609.2021,886.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="112.5" x="623.9583" y="888.7044">EmptyPbfTagMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="593.75" x2="741.6667" y1="899.6745" y2="899.6745"/><polygon fill="#FFFF44" points="604.1667,929.836,608.3333,934.0027,604.1667,938.1694,600,934.0027" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="615.625" y="941.9556">EmptyPbfTagMap()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="593.75" x2="623.9583" y1="917.8802" y2="917.8802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="627.0833" y="921.6899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="711.4583" x2="741.6667" y1="917.8802" y2="917.8802"/><!--MD5=[39d6d2ea03de602dbf4d534e70c872a9]
class Tag--><rect fill="#282828" height="48.055" id="Tag" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="61.4583" x="868.2292" y="885.9945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="61.4583" x="868.2292" y="885.9945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="61.4583" x="868.2292" y="909.0495"/><rect fill="none" height="48.055" id="Tag" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="61.4583" x="868.2292" y="885.9945"/><ellipse cx="882.8125" cy="901.6886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M884.7229,906.1137 Q884.2957,906.3334 883.8257,906.4433 Q883.3557,906.5531 882.8369,906.5531 Q880.9937,906.5531 880.0232,905.3385 Q879.0527,904.1239 879.0527,901.829 Q879.0527,899.528 880.0232,898.3134 Q880.9937,897.0988 882.8369,897.0988 Q883.3557,897.0988 883.8318,897.2087 Q884.3079,897.3185 884.7229,897.5382 L884.7229,899.5402 Q884.259,899.113 883.8226,898.9146 Q883.3862,898.7162 882.9224,898.7162 Q881.9336,898.7162 881.4301,899.5005 Q880.9265,900.2848 880.9265,901.829 Q880.9265,903.3671 881.4301,904.1514 Q881.9336,904.9357 882.9224,904.9357 Q883.3862,904.9357 883.8226,904.7373 Q884.259,904.539 884.7229,904.1117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="23.9583" x="899.4792" y="906.4128">Tag</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="869.2708" x2="928.6458" y1="917.3828" y2="917.3828"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="869.2708" x2="928.6458" y1="925.7161" y2="925.7161"/><!--MD5=[56a5e24547e9848fa048dca0457945be]
class PbfTagList--><rect codeLine="33" fill="#282828" height="550.0102" id="PbfTagList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="325" x="825" y="165.1611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="325" x="825" y="165.1611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="325" x="825" y="188.2161"/><rect codeLine="33" fill="none" height="550.0102" id="PbfTagList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="325" x="825" y="165.1611"/><ellipse cx="945.8333" cy="180.8553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M947.7437,185.2804 Q947.3165,185.5001 946.8465,185.6099 Q946.3765,185.7198 945.8577,185.7198 Q944.0145,185.7198 943.044,184.5052 Q942.0736,183.2906 942.0736,180.9957 Q942.0736,178.6947 943.044,177.4801 Q944.0145,176.2655 945.8577,176.2655 Q946.3765,176.2655 946.8526,176.3753 Q947.3287,176.4852 947.7437,176.7049 L947.7437,178.7069 Q947.2799,178.2796 946.8435,178.0813 Q946.4071,177.8829 945.9432,177.8829 Q944.9544,177.8829 944.4509,178.6672 Q943.9473,179.4515 943.9473,180.9957 Q943.9473,182.5338 944.4509,183.3181 Q944.9544,184.1024 945.9432,184.1024 Q946.4071,184.1024 946.8435,183.904 Q947.2799,183.7056 947.7437,183.2784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="68.75" x="968.75" y="185.5794">PbfTagList</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="826.0417" x2="1148.9583" y1="196.5495" y2="196.5495"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="826.0417" x2="1148.9583" y1="204.8828" y2="204.8828"/><ellipse cx="836.4583" cy="216.3411" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="847.9167" y="223.2524">Tag get(String key)</text><ellipse cx="836.4583" cy="236.086" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="847.9167" y="242.9972">Tag get(int index)</text><ellipse cx="836.4583" cy="255.8309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="847.9167" y="262.7421">void retainOnly(Set&lt;String&gt; keys)</text><ellipse cx="836.4583" cy="299.4873" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="847.9167" y="306.3985">boolean isValid()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="826.0417" x2="960.9375" y1="282.3232" y2="282.3232"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="964.0625" y="286.1328">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1014.0625" x2="1148.9583" y1="282.3232" y2="282.3232"/><ellipse cx="836.4583" cy="343.1437" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="847.9167" y="350.0549">PbfTagList add(Tag)</text><ellipse cx="836.4583" cy="362.8886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="847.9167" y="369.7998">PbfTagList add(String key, String value)</text><ellipse cx="836.4583" cy="382.6335" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="847.9167" y="389.5447">PbfTagList addAll(Iterable&lt;Tag&gt; tags)</text><ellipse cx="836.4583" cy="402.3783" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="847.9167" y="409.2896">List&lt;Tag&gt; asList()</text><ellipse cx="836.4583" cy="422.1232" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="847.9167" y="429.0344">boolean containsKey(String key)</text><ellipse cx="836.4583" cy="441.8681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="847.9167" y="448.7793">PbfTagList copy()</text><ellipse cx="836.4583" cy="461.613" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="847.9167" y="468.5242">PbfTagList create()</text><ellipse cx="836.4583" cy="481.3578" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="847.9167" y="488.269">PbfTagList from(Collection&lt;Tag&gt; tags)</text><ellipse cx="836.4583" cy="501.1027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="847.9167" y="508.0139">PbfTagList from(Collection&lt;Tag&gt; tags, PbfTagFilter)</text><ellipse cx="836.4583" cy="520.8476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="847.9167" y="527.7588">boolean isEmpty()</text><ellipse cx="836.4583" cy="540.5924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="847.9167" y="547.5037">PbfTagList matchingKey(String key)</text><ellipse cx="836.4583" cy="560.3373" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="847.9167" y="567.2485">PbfTagList of(Tag)</text><ellipse cx="836.4583" cy="580.0822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="847.9167" y="586.9934">void removeKey(String key)</text><ellipse cx="836.4583" cy="599.8271" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="847.9167" y="606.7383">PbfTagList set(int index, String key, String value)</text><ellipse cx="836.4583" cy="619.5719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="847.9167" y="626.4832">int size()</text><ellipse cx="836.4583" cy="639.3168" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="847.9167" y="646.228">PbfTagList sorted()</text><ellipse cx="836.4583" cy="659.0617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="847.9167" y="665.9729">String valueForKey(String key)</text><ellipse cx="836.4583" cy="678.8066" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="847.9167" y="685.7178">String valueForKey(String key, String defaultValue)</text><ellipse cx="836.4583" cy="698.5514" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="847.9167" y="705.4626">PbfTagList withoutKey(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="826.0417" x2="953.125" y1="325.9796" y2="325.9796"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="956.25" y="329.7892">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1021.875" x2="1148.9583" y1="325.9796" y2="325.9796"/><!--MD5=[92c7f35f41c1a9021289ca75e2accaf4]
class PbfTagPatternFilter--><rect codeLine="93" fill="#282828" height="218.514" id="PbfTagPatternFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="525" x="31.25" y="800.5778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="525" x="31.25" y="800.5778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="525" x="31.25" y="823.6328"/><rect codeLine="93" fill="none" height="218.514" id="PbfTagPatternFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="525" x="31.25" y="800.5778"/><ellipse cx="224.4792" cy="816.272" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M226.3896,820.697 Q225.9623,820.9167 225.4924,821.0266 Q225.0224,821.1365 224.5036,821.1365 Q222.6603,821.1365 221.6899,819.9219 Q220.7194,818.7073 220.7194,816.4124 Q220.7194,814.1113 221.6899,812.8967 Q222.6603,811.6821 224.5036,811.6821 Q225.0224,811.6821 225.4985,811.792 Q225.9745,811.9019 226.3896,812.1216 L226.3896,814.1235 Q225.9257,813.6963 225.4893,813.4979 Q225.0529,813.2996 224.589,813.2996 Q223.6003,813.2996 223.0967,814.0839 Q222.5932,814.8682 222.5932,816.4124 Q222.5932,817.9504 223.0967,818.7347 Q223.6003,819.519 224.589,819.519 Q225.0529,819.519 225.4893,819.3207 Q225.9257,819.1223 226.3896,818.6951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="123.9583" x="247.3958" y="820.9961">PbfTagPatternFilter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="32.2917" x2="555.2083" y1="831.9661" y2="831.9661"/><ellipse cx="42.7083" cy="867.336" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="147.9167" x="54.1667" y="874.2472">PbfTagPatternFilter(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="32.2917" x2="250" y1="850.1719" y2="850.1719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="253.125" y="853.9815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="337.5" x2="555.2083" y1="850.1719" y2="850.1719"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="32.2917" x2="555.2083" y1="883.9559" y2="883.9559"/><ellipse cx="42.7083" cy="895.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="54.1667" y="902.3254">Set&lt;String&gt; allFilteredTags()</text><ellipse cx="42.7083" cy="915.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="54.1667" y="922.0703">Set&lt;String&gt; rejectedTags()</text><ellipse cx="42.7083" cy="958.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="492.7083" x="54.1667" y="965.7267">SwitchParser.Builder&lt;PbfTagPatternFilter&gt; switchParser(String name, String description)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="32.2917" x2="224.4792" y1="941.6514" y2="941.6514"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="227.6042" y="945.461">(command line parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="363.0208" x2="555.2083" y1="941.6514" y2="941.6514"/><ellipse cx="42.7083" cy="1002.4719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="54.1667" y="1009.3831">PbfTagPatternFilter forPattern(String pattern)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="32.2917" x2="264.5833" y1="985.3078" y2="985.3078"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="267.7083" y="989.1174">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="322.9167" x2="555.2083" y1="985.3078" y2="985.3078"/><!--MD5=[b1e210ffc7c989b1f4aba02912a48aa9]
class PbfTags--><rect codeLine="107" fill="#282828" height="146.7794" id="PbfTags" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="337.5" x="1186.4583" y="366.7236"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="337.5" x="1186.4583" y="366.7236"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="337.5" x="1186.4583" y="389.7786"/><rect codeLine="107" fill="none" height="146.7794" id="PbfTags" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="337.5" x="1186.4583" y="366.7236"/><ellipse cx="1321.875" cy="382.4178" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1323.7854,386.8429 Q1323.3582,387.0626 1322.8882,387.1724 Q1322.4182,387.2823 1321.8994,387.2823 Q1320.0562,387.2823 1319.0857,386.0677 Q1318.1152,384.8531 1318.1152,382.5582 Q1318.1152,380.2572 1319.0857,379.0426 Q1320.0562,377.828 1321.8994,377.828 Q1322.4182,377.828 1322.8943,377.9378 Q1323.3704,378.0477 1323.7854,378.2674 L1323.7854,380.2694 Q1323.3215,379.8421 1322.8851,379.6438 Q1322.4487,379.4454 1321.9849,379.4454 Q1320.9961,379.4454 1320.4926,380.2297 Q1319.989,381.014 1319.989,382.5582 Q1319.989,384.0963 1320.4926,384.8806 Q1320.9961,385.6649 1321.9849,385.6649 Q1322.4487,385.6649 1322.8851,385.4665 Q1323.3215,385.2681 1323.7854,384.8409 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="1344.7917" y="387.1419">PbfTags</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1187.5" x2="1522.9167" y1="398.112" y2="398.112"/><ellipse cx="1197.9167" cy="433.4819" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="1209.375" y="440.3931">PropertyMap tags(String prefix, Collection&lt;Tag&gt; tags)</text><ellipse cx="1197.9167" cy="453.2267" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="1209.375" y="460.1379">List&lt;Tag&gt; tags(String prefix, PropertyMap properties)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1187.5" x2="1320.8333" y1="416.3177" y2="416.3177"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1323.9583" y="420.1274">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1389.5833" x2="1522.9167" y1="416.3177" y2="416.3177"/><ellipse cx="1197.9167" cy="496.8831" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="1209.375" y="503.7944">Tag parse(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1187.5" x2="1326.5625" y1="479.719" y2="479.719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="1329.6875" y="483.5286">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1383.8542" x2="1522.9167" y1="479.719" y2="479.719"/><!--MD5=[02c4f55c2c4a491172c929741a457a6e]
reverse link BaseStringConverter to PbfTagPatternFilter.Converter--><path codeLine="11" d="M132.2917,122.9736 C132.2917,193.5049 132.2917,330.3278 132.2917,398.484 " fill="none" id="BaseStringConverter-backto-PbfTagPatternFilter.Converter" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="125,122.6299,132.2917,101.7965,139.5833,122.6299,125,122.6299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[cc942af7ae38b17b678e2ecccc557737]
reverse link PbfTagMap to EmptyPbfTagMap--><path codeLine="18" d="M648.9688,708.609 C654.8333,771.2549 660.3854,830.6195 663.9063,868.2132 " fill="none" id="PbfTagMap-backto-EmptyPbfTagMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="641.6979,709.1507,647.0208,687.7236,656.2188,707.7861,641.6979,709.1507" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ad57c19ac60e931f9d8ac4882e497226]
link PbfTagFilter to Tag--><path codeLine="25" d="M334.4792,482.1507 C344.4688,542.2132 371.7708,653.7236 441.6667,715.1611 C552.1667,812.2861 629.9063,734.7236 761.4583,800.5778 C803.7604,821.7549 845.4583,857.234 871.6458,881.7965 " fill="none" id="PbfTagFilter-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="875.7188,885.6403,871.7476,876.1808,871.926,882.0707,866.0362,882.2492,875.7188,885.6403" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="38.5417" x="585.4167" y="762.6628">filters</text><!--MD5=[c8a6b7b4b88f4c6d9233f6e4bfdff5df]
link PbfTagList to Tag--><path codeLine="32" d="M935.6146,715.2965 C922.8229,782.859 910.9063,845.807 904.3125,880.6403 " fill="none" id="PbfTagList-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="903.3021,885.9945,909.1414,877.5592,904.2718,880.8772,900.9538,876.0076,903.3021,885.9945" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="40.625" x="931.25" y="762.6628">stores</text><!--MD5=[8b40e2470dba9ca1d038d72d18121892]
reverse link Keyed to PbfTagMap--><path codeLine="63" d="M623.9583,122.6299 C623.9583,141.9007 623.9583,166.1611 623.9583,192.6403 " fill="none" id="Keyed-backto-PbfTagMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="616.6667,122.6299,623.9583,101.7965,631.25,122.6299,616.6667,122.6299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[bbdb956dbc56d14ff1f462eec549b843]
link PbfTagMap to Tag--><path codeLine="64" d="M768.9063,687.7236 C814.7396,765.6715 859.4688,841.7445 882.6354,881.1507 " fill="none" id="PbfTagMap-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="885.3542,885.7757,884.1937,875.5823,882.7141,881.2861,877.0103,879.8065,885.3542,885.7757" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="40.625" x="813.5417" y="762.6628">stores</text><!--MD5=[b494e1d0b9c72b23ebdcad1360657f46]
reverse link PbfTagFilter to PbfTagPatternFilter--><path codeLine="92" d="M324.4792,503.0986 C318.75,578.7549 308.9583,708.1195 301.9583,800.4424 " fill="none" id="PbfTagFilter-backto-PbfTagPatternFilter" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="317.2396,502.109,326.0833,481.8903,331.7813,503.2132,317.2396,502.109" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[19808d32ec61d77a74356442bacb26b6]
link PbfTags to Tag--><path codeLine="106" d="M1315.3958,513.7861 C1281.2292,572.1611 1228.1979,654.1924 1168.75,715.1611 C1095.2813,790.5049 989.4583,856.8903 934.7396,888.7965 " fill="none" id="PbfTags-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="929.9271,891.5882,940.1265,890.4824,934.4308,888.9722,935.9409,883.2765,929.9271,891.5882" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="133.3333" x="1133.3333" y="762.6628">provides utilities for</text><!--MD5=[42e313cd43d73afbf4b01bc9f5a3edf3]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.aonia.map.data.formats.pbf.model.tags"
    
    abstract BaseStringConverter
    
    interface PbfTagFilter
    interface Keyed
    
    BaseStringConverter <|- - PbfTagPatternFilter.Converter
    class PbfTagPatternFilter.Converter
    {
        - -(constructors)- -
        +Converter(Listener)
    }
    
    PbfTagMap <|- - EmptyPbfTagMap
    class EmptyPbfTagMap
    {
        - -(constructors)- -
        #EmptyPbfTagMap()
    }
    
    PbfTagFilter - -> Tag : "filters"
    interface PbfTagFilter
    {
        - -(filtering)- -
        +boolean accepts(Tag)
    }
    
    PbfTagList - -> Tag : "stores"
    class PbfTagList
    {
        - -
        +Tag get(String key)
        +Tag get(int index)
        +void retainOnly(Set<String> keys)
        - -(checks)- -
        +boolean isValid()
        - -(collection)- -
        +PbfTagList add(Tag)
        +PbfTagList add(String key, String value)
        +PbfTagList addAll(Iterable<Tag> tags)
        +List<Tag> asList()
        +boolean containsKey(String key)
        +PbfTagList copy()
        +PbfTagList create()
        +PbfTagList from(Collection<Tag> tags)
        +PbfTagList from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +PbfTagList matchingKey(String key)
        +PbfTagList of(Tag)
        +void removeKey(String key)
        +PbfTagList set(int index, String key, String value)
        +int size()
        +PbfTagList sorted()
        +String valueForKey(String key)
        +String valueForKey(String key, String defaultValue)
        +PbfTagList withoutKey(String key)
    }
    
    Keyed <|- - PbfTagMap
    PbfTagMap - -> Tag : "stores"
    class PbfTagMap
    {
        - -(constructors)- -
        #PbfTagMap(int)
        - -
        +String get(String key, String defaultValue)
        +Tag tag(String key)
        +int valueAsNaturalNumber(String key)
        +boolean valueIsNo(String key)
        +boolean valueIsYes(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +PbfTagMap create()
        +PbfTagMap from(Collection<Tag> tags)
        +PbfTagMap from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +Iterator<String> keys()
        +void put(String key, String value)
        +void putAll(Iterable<Tag> tags)
        +int size()
        +String value(String key)
        +StringList valueSplit(String key)
        - -(primitive)- -
        +int valueAsInt(String key)
        +long valueAsLong(String key)
    }
    
    PbfTagFilter <|- - PbfTagPatternFilter
    class PbfTagPatternFilter
    {
        - -(constructors)- -
        +PbfTagPatternFilter(String)
        - -
        +Set<String> allFilteredTags()
        +Set<String> rejectedTags()
        - -(command line parsing)- -
        +SwitchParser.Builder<PbfTagPatternFilter> switchParser(String name, String description)
        - -(filtering)- -
        +PbfTagPatternFilter forPattern(String pattern)
    }
    
    PbfTags - -> Tag : "provides utilities for"
    class PbfTags
    {
        - -(collection)- -
        +PropertyMap tags(String prefix, Collection<Tag> tags)
        +List<Tag> tags(String prefix, PropertyMap properties)
        - -(parsing)- -
        +Tag parse(String)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.aonia.map.data.formats.pbf.model.tags"
    
    abstract BaseStringConverter
    
    interface PbfTagFilter
    interface Keyed
    
    BaseStringConverter <|- - PbfTagPatternFilter.Converter
    class PbfTagPatternFilter.Converter
    {
        - -(constructors)- -
        +Converter(Listener)
    }
    
    PbfTagMap <|- - EmptyPbfTagMap
    class EmptyPbfTagMap
    {
        - -(constructors)- -
        #EmptyPbfTagMap()
    }
    
    PbfTagFilter - -> Tag : "filters"
    interface PbfTagFilter
    {
        - -(filtering)- -
        +boolean accepts(Tag)
    }
    
    PbfTagList - -> Tag : "stores"
    class PbfTagList
    {
        - -
        +Tag get(String key)
        +Tag get(int index)
        +void retainOnly(Set<String> keys)
        - -(checks)- -
        +boolean isValid()
        - -(collection)- -
        +PbfTagList add(Tag)
        +PbfTagList add(String key, String value)
        +PbfTagList addAll(Iterable<Tag> tags)
        +List<Tag> asList()
        +boolean containsKey(String key)
        +PbfTagList copy()
        +PbfTagList create()
        +PbfTagList from(Collection<Tag> tags)
        +PbfTagList from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +PbfTagList matchingKey(String key)
        +PbfTagList of(Tag)
        +void removeKey(String key)
        +PbfTagList set(int index, String key, String value)
        +int size()
        +PbfTagList sorted()
        +String valueForKey(String key)
        +String valueForKey(String key, String defaultValue)
        +PbfTagList withoutKey(String key)
    }
    
    Keyed <|- - PbfTagMap
    PbfTagMap - -> Tag : "stores"
    class PbfTagMap
    {
        - -(constructors)- -
        #PbfTagMap(int)
        - -
        +String get(String key, String defaultValue)
        +Tag tag(String key)
        +int valueAsNaturalNumber(String key)
        +boolean valueIsNo(String key)
        +boolean valueIsYes(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +PbfTagMap create()
        +PbfTagMap from(Collection<Tag> tags)
        +PbfTagMap from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +Iterator<String> keys()
        +void put(String key, String value)
        +void putAll(Iterable<Tag> tags)
        +int size()
        +String value(String key)
        +StringList valueSplit(String key)
        - -(primitive)- -
        +int valueAsInt(String key)
        +long valueAsLong(String key)
    }
    
    PbfTagFilter <|- - PbfTagPatternFilter
    class PbfTagPatternFilter
    {
        - -(constructors)- -
        +PbfTagPatternFilter(String)
        - -
        +Set<String> allFilteredTags()
        +Set<String> rejectedTags()
        - -(command line parsing)- -
        +SwitchParser.Builder<PbfTagPatternFilter> switchParser(String name, String description)
        - -(filtering)- -
        +PbfTagPatternFilter forPattern(String pattern)
    }
    
    PbfTags - -> Tag : "provides utilities for"
    class PbfTags
    {
        - -(collection)- -
        +PropertyMap tags(String prefix, Collection<Tag> tags)
        +List<Tag> tags(String prefix, PropertyMap properties)
        - -(parsing)- -
        +Tag parse(String)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>